#!/bin/sh

set -e
function info { echo -e "\e[32m[info] $*\e[39m"; }
function warn  { echo -e "\e[33m[warn] $*\e[39m"; }
function error { echo -e "\e[31m[error] $*\e[39m"; exit 1; }

ARCH=$(uname -m)

DOCKER_REPO="ghcr.io/home-assistant"

# Read infos from web
URL_CHECK_ONLINE="checkonline.home-assistant.io"
URL_VERSION="https://version.home-assistant.io/stable.json"
HASSIO_VERSION=$(curl -s ${URL_VERSION} | jq -e -r '.supervisor')
URL_APPARMOR_PROFILE="https://version.home-assistant.io/apparmor.txt"

# Check network connection
while ! ping -c 1 -W 1 ${URL_CHECK_ONLINE} > /dev/null; do
	info "Waiting for ${URL_CHECK_ONLINE} - network interface might be down..."
	sleep 2
done

case ${ARCH} in
	"i386" | "i686")
		MACHINE=${MACHINE:=i386}
		HASSIO_DOCKER="${DOCKER_REPO}/i386-hassio-supervisor"
	;;
	"x86_64")
		MACHINE=${MACHINE:=amd64}
		HASSIO_DOCKER="${DOCKER_REPO}/amd64-hassio-supervisor"
	;;
	"arm" |"armv6l")
		MACHINE=${MACHINE:=armhf}
		HASSIO_DOCKER="${DOCKER_REPO}/armhf-hassio-supervisor"
	;;
	"armv7l")
		MACHINE=${MACHINE:=armv7}
		HASSIO_DOCKER="${DOCKER_REPO}/armv7-hassio-supervisor"
	;;
	"aarch64")
		MACHINE=${MACHINE:=aarch64}
		HASSIO_DOCKER="${DOCKER_REPO}/aarch64-hassio-supervisor"
	;;
	*)
		error "${ARCH} unknown!"
	;;
esac

PREFIX=${PREFIX:-/usr}
SYSCONFDIR=${SYSCONFDIR:-/etc}
DATA_SHARE=${DATA_SHARE:-$PREFIX/share/hassio}
CONFIG="${SYSCONFDIR}/hassio.json"

mkdir -p ${DATA_SHARE}/apparmor

cat > "${CONFIG}" <<- EOF
{
	"supervisor": "${HASSIO_DOCKER}",
	"machine": "${MACHINE}",
	"data": "${DATA_SHARE}"
}
EOF

# Install Supervisor
sed -i "s,%%HASSIO_CONFIG%%,${CONFIG},g" "${PREFIX}/sbin/hassio-supervisor"

rc-update add hassio-supervisor

# Install AppArmor
curl -sL ${URL_APPARMOR_PROFILE} > "${DATA_SHARE}/apparmor/hassio-supervisor"
sed -i "s,%%HASSIO_CONFIG%%,${CONFIG},g" "${PREFIX}/sbin/hassio-apparmor"

rc-update add hassio-apparmor
service hassio-apparmor start

# Start Supervisor
service hassio-supervisor start

# Get primary network interface
PRIMARY_INTERFACE=$(ip route | awk '/^default/ { print $5; exit }')
IP_ADDRESS=$(ip -4 addr show dev "${PRIMARY_INTERFACE}" | awk '/inet / { sub("/.*", "", $2); print $2 }')
HOSTNAME=$(hostname)

info "Within a few minutes you will be able to reach Home Assistant at:"
info "http://${HOSTNAME}.local:8123 or using the IP address of your"
info "machine: http://${IP_ADDRESS}:8123"
